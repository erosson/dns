# For easier testing, site addresses are different in dev and prod.
#
# In dev, when running with `docker compose up --build`:
# * You'll connect to `http://{host}.localhost:2015`. For example, `http://math2.swarmsim.com.localhost:2015`. "http", with no "s".
# * The files `/var/www/{host}.localhost` will exist.
#
# In prod, when running the CI-built container:
# * You'll connect to `https://{host}`. For example, `https://math2.swarmsim.com`. "https", with an "s".
# The files `/var/www/{host}.localhost` will not exist.
{$DOMAIN_PREFIX}docker-math2.swarmsim.com{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}docker-math.swarmsim.com{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}docker-cooking.erosson.org{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}docker-vegas-wordle.erosson.org{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}docker-freecbt.erosson.org{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}docker-www.zealgame.com{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}math2.swarmsim.com{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}cooking.erosson.org{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}vegas-wordle.erosson.org{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}freecbt.erosson.org{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}www.zealgame.com{$DOMAIN_SUFFIX} {
    # {host}: https://caddyserver.com/docs/caddyfile/concepts#placeholders
    root * /var/www/{host}
    file_server
}

# ops/debug pages are just like most other pages, but with basicauth
{$DOMAIN_PREFIX}docker-ops.erosson.org{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}ops.erosson.org{$DOMAIN_SUFFIX} {
    root * /var/www/{host}
    file_server

    basicauth /debug/* {
        # passwords must be hashed before adding them to this file. https://caddyserver.com/docs/caddyfile/directives/basicauth
        # `docker run caddy caddy hash-password -p PASSWORD`
        # shame on me for putting a password hash in public git, but production's different, and this doesn't need to be very secure
        {$OPS_BASICAUTH:evan $2a$14$b3ihEIX.8Eq2IvBJ8HyLKew9/2X1SI/1X67HbAFzZF8iZwTTq4fwW}
    }
}

# https://caddyserver.com/docs/caddyfile/patterns#redirect-www-subdomain
# zealgame.com -> www.zealgame.com
# docker.zealgame.com -> docker-www.zealgame.com
{$DOMAIN_PREFIX}zealgame.com{$DOMAIN_SUFFIX} {
    redir {scheme}://www.zealgame.com{uri}
}
{$DOMAIN_PREFIX}docker.zealgame.com{$DOMAIN_SUFFIX} {
    redir {scheme}://docker-www.zealgame.com{uri}
}
{$DOMAIN_PREFIX}*.swarmsimulator.com{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}swarmsimulator.com{$DOMAIN_SUFFIX} {
    redir {scheme}://www.swarmsim.com{uri}
}
{$DOMAIN_PREFIX}*.evanrosson.org{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}evanrosson.org{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}*.evanrosson.com{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}evanrosson.com{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}*.erosson.us{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}erosson.us{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}*.erosson.com{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}erosson.com{$DOMAIN_SUFFIX} {
    redir https://www.erosson.org{uri}
}

{$DOMAIN_PREFIX}*.xmarkedgame.com{$DOMAIN_SUFFIX},
{$DOMAIN_PREFIX}xmarkedgame.com{$DOMAIN_SUFFIX} {
    redir https://www.x-marked.com{uri}
}

:80, :443, :2015 {
    # route{} uses the order below, not caddy's default order. without this, `error` is higher priority and health checks all 404.
    route {
        # tolerate health checks without any specific vhost. digitalocean (and other providers) need this for deployment to succeed
        respond /healthz 200 {
            body "大丈夫です。"
        }
        # any other path without a valid vhost fails
        error * "Not found" 404
    }
    # TODO: this affects other domains too, oops
    handle_errors {
        root * /sites/error
        rewrite * /404-vhost.html
        file_server
    }
}